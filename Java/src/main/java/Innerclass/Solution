import java.util.ArrayList;
import java.util.LinkedList;

public class Album {

    private String name;
    private String artist;
    private SongList songs;  // Inner class for managing songs

    public Album(String name, String artist) {
        this.name = name;
        this.artist = artist;
        this.songs = new SongList();  // Initialize the SongList
    }

    // Add a new song to the album
    public boolean addSong(String title, double duration) {
        return songs.add(new Song(title, duration));  // Use the SongList to add songs
    }

    // Add a song to the playlist by track number
    public boolean addToPlayList(int trackNumber, LinkedList<Song> playList) {
        Song checkedSong = songs.findSong(trackNumber);  // Find song by track number
        if (checkedSong != null) {
            playList.add(checkedSong);
            return true;
        }
        System.out.println("This album does not have a track " + trackNumber);
        return false;
    }

    // Add a song to the playlist by song title
    public boolean addToPlayList(String title, LinkedList<Song> playList) {
        Song checkedSong = songs.findSong(title);  // Find song by title
        if (checkedSong != null) {
            playList.add(checkedSong);
            return true;
        }
        System.out.println("The song " + title + " is not in this album");
        return false;
    }

    // Inner class to handle the list of songs in the album
    public static class SongList {

        private ArrayList<Song> songs;

        private SongList() {
            songs = new ArrayList<Song>();
        }

        // Add a song to the list
        private boolean add(Song song) {
            if (songs.contains(song)) {
                return false;  // Song already in list
            }
            songs.add(song);
            return true;  // Successfully added
        }

        // Find a song by title
        private Song findSong(String title) {
            for (Song checkedSong : songs) {
                if (checkedSong.getTitle().equals(title)) {
                    return checkedSong;
                }
            }
            return null;  // Song not found
        }

        // Find a song by track number
        private Song findSong(int trackNumber) {
            int index = trackNumber - 1;  // Track number starts from 1
            if (index >= 0 && index < songs.size()) {
                return songs.get(index);
            }
            return null;  // Invalid track number
        }
    }
}




























public class Song {
    
    private String title;
    private double duration;
    
    public Song(String title, double duration) {
        this.title = title;
        this.duration = duration;
    }
    
    // Only the required method
    public String getTitle() {
        return title;
    }
    
    // Only the required method
    @Override
    public String toString() {
        return "Song{" + "title='" + title + '\'' + '}';
    }
}
