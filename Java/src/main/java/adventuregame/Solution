/*
    Only add/edit code where it is stated in the description.
*/

import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;
import java.util.*;

public class Main {
    
    private Map<Integer, Location> locations = new HashMap<Integer, Location>();
    private Map<String, String> vocabulary = new HashMap<>();

    public Main() {
        locations.put(0, new Location(0, "You are sitting in front of a computer learning Java"));
        locations.put(1, new Location(1, "You are standing at the end of a road before a small brick building\n"));
        locations.put(2, new Location(2, "You are at the top of a hill"));
        locations.put(3, new Location(3, "You are inside a building, a well house for a small spring"));
        locations.put(4, new Location(4, "You are in a valley beside a stream"));
        locations.put(5, new Location(5, "You are in the forest"));

        locations.get(1).addExit("W", 2);
        locations.get(1).addExit("E", 3);
        locations.get(1).addExit("S", 4);
        locations.get(1).addExit("N", 5);

        locations.get(2).addExit("N", 5);

        locations.get(3).addExit("W", 1);

        locations.get(4).addExit("N", 1);
        locations.get(4).addExit("W", 2);

        locations.get(5).addExit("S", 1);
        locations.get(5).addExit("W", 2);
        
// Populate vocabulary for full-word to abbreviation mapping
        vocabulary.put("NORTH", "N");
        vocabulary.put("SOUTH", "S");
        vocabulary.put("EAST", "E");
        vocabulary.put("WEST", "W");
        vocabulary.put("QUIT", "Q");
    }

     // Method to handle user commands (game loop)
    public void command() {
        int currentLocationId = 1;  // Starting location: location 1
        Location currentLocation = locations.get(currentLocationId);

        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println(currentLocation.getDescription());

            // Get the available exits from the current location
            Set<String> availableExits = currentLocation.getExits().keySet();
            System.out.print("Available exits are ");
            for (String exit : availableExits) {
                System.out.print(exit + ", ");
            }
            System.out.println();

            // Read user input
            String input = scanner.nextLine().trim().toUpperCase();

            // Handle quit command
            if (input.equals("Q") || input.equals("QUIT")) {
                System.out.println("\nYou are sitting in front of a computer learning Java");
                break;
            }

            // Convert full command to abbreviation if needed
            if (vocabulary.containsKey(input)) {
                input = vocabulary.get(input);  // Convert full word to abbreviation
            }

            // Process the input to move between locations
            if (currentLocation.getExits().containsKey(input)) {
                currentLocationId = currentLocation.getExits().get(input);  // Get the destination location ID
                currentLocation = locations.get(currentLocationId);  // Update current location
            } else {
                System.out.println("You cannot go in that direction");
            }
        }

        scanner.close();
    }
}