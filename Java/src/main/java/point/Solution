public class Point {

    // Instance variables
    private int x;
    private int y;

    // No-arg constructor that initializes x and y to 0
    public Point() {
        this.x = 0;
        this.y = 0;
    }

    // Constructor that initializes x and y with provided values
    public Point(int x, int y) {
        this.x = x;
        this.y = y;
    }

    // Method to get the value of x
    public int getX() {
        return x;
    }

    // Method to get the value of y
    public int getY() {
        return y;
    }

    // Method to set the value of x
    public void setX(int x) {
        this.x = x;
    }

    // Method to set the value of y
    public void setY(int y) {
        this.y = y;
    }

    // Method to calculate the distance from this Point to the origin (0, 0)
    public double distance() {
        return Math.sqrt(x * x + y * y);
    }

    // Method to calculate the distance from this Point to another Point
    public double distance(Point otherPoint) {
        return Math.sqrt((otherPoint.x - this.x) * (otherPoint.x - this.x) +
                         (otherPoint.y - this.y) * (otherPoint.y - this.y));
    }

    // Method to calculate the distance from this Point to a point given by x and y
    public double distance(int x, int y) {
        return Math.sqrt((x - this.x) * (x - this.x) + (y - this.y) * (y - this.y));
    }
}
























public class Point {

    private int x;
    private int y;

    public Point() {}

    public Point(int x, int y) {
        this.x = x;
        this.y = y;
    }

    public int getX() {
        return x;
    }

    public void setX(int x) {
        this.x = x;
    }

    public int getY() {
        return y;
    }

    public void setY(int y) {
        this.y = y;
    }

    public double distance() {
        return distance(0, 0);
    }

    public double distance(Point a) {
        return distance(a.x, a.y);
    }

    public double distance(int x, int y) {

        int xDiff = this.x - x;
        int yDiff = this.y - y;
        return Math.sqrt(xDiff * xDiff + yDiff * yDiff);
    }
}
